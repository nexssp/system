const{execSync:execSync}=require("child_process"),{existsSync:existsSync}=require("fs"),defaultOptions={};function debugOutput(e,s,n,o){console.log(o?"\nResult WITH STDERR:":`\nResult WITHOUT STDERR:\nExecuted: ${e}\nOptions: `,s,`process.cwd(): ${process.cwd()}`,"\nSTDOUT:\n",n,"|END STDOUT"),o&&console.error(o)}function nSpawn(e,s={}){var{parseArgsStringToArgv:n}=require("string-argv");const[o,...t]=n(e);if(nSpawn.debug&&(console.log("command:",e),console.log("cmd:",o),console.log("args:",t)),"win32"!==process.platform&&Object.assign(s,{shell:process.shell}),s.cwd&&!existsSync(s.cwd))return new Error("Folder passed to 'nSpawn' does not exist.");let r="";"win32"===process.platform&&"nexss"===o&&(r=".cmd");let c="",l="",p=0;s.stdio="pipe";try{l=execSync(`${e} --nxsPipeErrors`,s).toString()}catch(e){c=e.stderr.toString(),console.log(c),p=e.status}return nSpawn.debug&&debugOutput(e,s,l,c),{exitCode:p,stdout:l,stderr:c}}"win32"!==process.platform&&Object.assign(defaultOptions,{shell:process.shell}),nSpawn.debug=!0,module.exports={nSpawn:nSpawn};